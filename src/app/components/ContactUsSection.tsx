"use client";
import React, { useState, useEffect, useRef } from "react";
import { Mail, Phone, MapPin, Send } from "lucide-react";

const ContactUsSection: React.FC = () => {
  const [formData, setFormData] = useState({
    name: "",
    telegram: "",
    whatsapp: "",
    message: "",
  });
  const [status, setStatus] = useState("");

  // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
  const [visible, setVisible] = useState(false);
  const sectionRef = useRef<HTMLDivElement | null>(null);

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const botToken = "7536197306:AAFaZvjmaUTp3CADNjPGxC9n6Z_EZYCKw2g";
    const chatId = "1475856594";
    const text = `üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞:\n\nüë§ –ò–º—è: ${formData.name}\nüìß Telegram: ${formData.telegram}\nWhatsApp: ${formData.whatsapp}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message}`;

    try {
      const res = await fetch(
        `https://api.telegram.org/bot${botToken}/sendMessage`,
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ chat_id: chatId, text }),
        }
      );

      if (res.ok) {
        setStatus("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        setFormData({ name: "", telegram: "", whatsapp: "", message: "" });
      } else {
        setStatus("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ");
      }
    } catch (err) {
      console.error(err);
      setStatus("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏");
    }
  };

  // IntersectionObserver –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setVisible(true);
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.2 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  return (
    <section
      ref={sectionRef}
      id="contacts"
      className="py-12 sm:py-16 md:py-20 bg-gradient-to-br from-purple-50 to-blue-50 overflow-x-hidden"
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div
          className={`text-center mb-10 sm:mb-12 md:mb-16 transition-all duration-700 ease-out 
            ${visible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"}`}
        >
          <h2 className="font-bold text-gray-900 mb-3 md:mb-6 text-3xl lg:text-4xl">
            –°–≤—è–∂–∏—Ç–µ—Å—å{" "}
            <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
              —Å –Ω–∞–º–∏
            </span>
          </h2>
          <p
            className="text-gray-600 mx-auto 
                      text-[14px] sm:text-base md:text-xl 
                      max-w-md sm:max-w-xl md:max-w-2xl"
          >
            –ú—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞
          </p>
        </div>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã + –§–æ—Ä–º–∞ */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 md:gap-10">
          {/* –ë–ª–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ */}
          <div
            className={`space-y-4 sm:space-y-6 transition-all duration-700 ease-out delay-200 
              ${visible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"}`}
          >
            <div className="flex items-center space-x-3 sm:space-x-4 bg-white shadow-lg p-4 sm:p-6 rounded-xl sm:rounded-2xl">
              <div className="w-10 h-10 sm:w-12 sm:h-12 bg-blue-100 flex items-center justify-center rounded-lg sm:rounded-xl">
                <Mail className="h-5 w-5 sm:h-6 sm:w-6 text-blue-600" />
              </div>
              <div>
                <p className="text-gray-600 text-sm sm:text-base">Email</p>
                <p className="font-semibold text-gray-900 text-sm sm:text-base">
                  antalyamarketplace@gmail.com
                </p>
              </div>
            </div>
            <div className="flex items-center space-x-3 sm:space-x-4 bg-white shadow-lg p-4 sm:p-6 rounded-xl sm:rounded-2xl">
              <div className="w-10 h-10 sm:w-12 sm:h-12 bg-green-100 flex items-center justify-center rounded-lg sm:rounded-xl">
                <Phone className="h-5 w-5 sm:h-6 sm:w-6 text-green-600" />
              </div>
              <div>
                <p className="text-gray-600 text-sm sm:text-base">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                <p className="font-semibold text-gray-900 text-sm sm:text-base">
                  +90 552 662 0091
                </p>
              </div>
            </div>
            <div className="flex items-center space-x-3 sm:space-x-4 bg-white shadow-lg p-4 sm:p-6 rounded-xl sm:rounded-2xl">
              <div className="w-10 h-10 sm:w-12 sm:h-12 bg-purple-100 flex items-center justify-center rounded-lg sm:rounded-xl">
                <MapPin className="h-5 w-5 sm:h-6 sm:w-6 text-purple-600" />
              </div>
              <div>
                <p className="text-gray-600 text-sm sm:text-base">–ê–¥—Ä–µ—Å</p>
                <p className="font-semibold text-gray-900 text-sm sm:text-base">
                  –ê–Ω—Ç–∞–ª—å—è, –¢—É—Ä—Ü–∏—è
                </p>
              </div>
            </div>
          </div>

          {/* –§–æ—Ä–º–∞ */}
          <div
            className={`bg-white shadow-lg p-4 sm:p-6 md:p-8 rounded-xl sm:rounded-2xl transition-all duration-700 ease-out delay-300 
              ${visible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"}`}
          >
            <h3 className="font-bold text-gray-900 mb-4 sm:mb-6 text-lg sm:text-xl md:text-2xl">
              –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º
            </h3>
            <form onSubmit={handleSubmit} className="space-y-3 sm:space-y-4">
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleChange}
                placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è"
                required
                className="w-full border border-gray-300 rounded-lg sm:rounded-xl px-3 py-2 sm:px-4 sm:py-3 focus:ring-2 focus:ring-blue-500 outline-none text-sm sm:text-base"
              />
              <input
                type="text"
                name="telegram"
                value={formData.telegram}
                onChange={handleChange}
                placeholder="–í–∞—à Telegram @username"
                required
                className="w-full border border-gray-300 rounded-lg sm:rounded-xl px-3 py-2 sm:px-4 sm:py-3 focus:ring-2 focus:ring-blue-500 outline-none text-sm sm:text-base"
              />
               <input
                type="tel"
                name="whatsapp"
                value={formData.whatsapp}
                onChange={handleChange}
                placeholder="–í–∞—à –Ω–æ–º–µ—Ä Whatsapp (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
                className="w-full border border-gray-300 rounded-lg sm:rounded-xl px-3 py-2 sm:px-4 sm:py-3 focus:ring-2 focus:ring-blue-500 outline-none text-sm sm:text-base"
              />
              <textarea
                name="message"
                rows={4}
                value={formData.message}
                onChange={handleChange}
                placeholder="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                required
                className="w-full border border-gray-300 rounded-lg sm:rounded-xl px-3 py-2 sm:px-4 sm:py-3 focus:ring-2 focus:ring-blue-500 outline-none text-sm sm:text-base"
              />
              <button
                type="submit"
                className="w-full flex items-center justify-center gap-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold py-2.5 sm:py-3 rounded-lg sm:rounded-xl hover:opacity-90 transition text-sm sm:text-base"
              >
                <Send className="h-4 w-4 sm:h-5 sm:w-5" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
              {status && (
                <p className="mt-2 text-center text-xs sm:text-sm text-gray-600">
                  {status}
                </p>
              )}
            </form>
          </div>
        </div>
      </div>
    </section>
  );
};

export default ContactUsSection;
